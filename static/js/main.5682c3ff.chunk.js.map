{"version":3,"sources":["axios.js","store/actionTypes.js","store/albums.js","store/favoriteAlbums.js","components/ModalDialog/ModalDialog.jsx","components/ModalDialog/index.js","components/AlbumModal/AlbumModal.js","components/AlbumModal/index.js","components/AlbumListItem/AlbumListItem.jsx","components/AlbumListItem/index.js","components/AlbumInfo/index.js","components/AlbumInfo/AlbumInfo.jsx","components/Albums/Albums.jsx","components/Albums/index.js","store/savedFavoriteAblumCards.js","components/Album/Album.jsx","components/Album/index.js","components/ResponsiveGrid/ResponsiveGrid.jsx","components/ResponsiveGrid/index.js","components/FavoriteAlbums/FavoriteAlbums.jsx","components/FavoriteAlbums/index.js","App.js","store/toDoList.js","store/index.js","theme.js","reportWebVitals.js","index.js"],"names":["axiosMusic","axios","create","baseURL","headers","Accept","FETCH_ALBUMS_START","FETCH_ALBUMS_SUCCESS","FETCH_ALBUMS_FAILED","FILTER_ALBUMS","TOGGLE_FAVORITE","CLEAR_FAVORITES","ADD_FAVORITE","REMOVE_FAVORITE","REPLACE_FAVORITES","SAVE_FAVORITES_CARDS_ORDER","FETCH_TODOLIST_SUCCESS","FETCH_TODOLIST_FAILED","UPDATE_TASK","DELETE_TASK","fetchFailed","type","fetchSuccess","albums","copy","initState","pending","success","items","origItems","getAlbums","state","albumsReducer","albumItems","createSelector","isAlbumsPending","isAlbumsSuccess","allFavoriteAlbums","filter","item","selected","deepCopy","array","length","map","obj","filterByKey","key","regexKey","RegExp","artist","match","title","getAlbumInfo","id","attributes","image","label","artistFull","substring","titleFull","link","href","price","releaseDate","toggleSelection","selectedId","init","favoriteAlbums","favoriteAlbumsReducer","CustomModalDialog","withStyles","theme","container","alignItems","root","breakpoints","only","width","height","paper","display","justifyContent","down","minHeight","Dialog","DialogContent","padding","spacing","marginTop","MuiDialogContent","DialogActions","margin","flexDirection","MuiDialogActions","Transition","React","forwardRef","props","ref","Slide","direction","ModalDialog","open","closeModal","children","useTheme","fullScreen","useMediaQuery","TransitionComponent","maxWidth","dividers","Button","onClick","color","useStyles","makeStyles","card","up","paddingTop","paddingBottom","cardWrap","boxShadow","media","albumTitle","fontWeight","fontSize","icon","position","right","top","heartIconFilled","content","AlbumModal","handleClickFavorite","openModal","classes","Card","className","CardMedia","component","alt","IconButton","e","stopPropagation","preventDefault","CardContent","Typography","variant","target","size","rel","listItemWrap","contentWrap","border","borderRadius","backgroundColor","webkitTransform","mozTtransform","oTransform","transform","contentWrapInner","textOverflow","action","paddingRight","AlbumListItem","maxImgHeight","showAlbumInfo","toggleFavorite","addFavoriteAlbum","removeFavoriteAlbum","useState","setOpenModal","isScreenLgUp","query","useCallback","itemCopy","prev","style","Grid","xs","sm","CardActions","connect","AlbumInfo","src","align","gutterBottom","spinner","searchWrap","search","searchIcon","pointerEvents","zIndex","inputRoot","inputInput","paddingLeft","transition","transitions","borderWidth","Albums","fetchAlbums","filterAlbums","URLSearchParams","useLocation","dispatch","useDispatch","searchKey","setSearchKey","selectedItem","setSelectedItem","get","favoriteDisplay","useEffect","Rows","memo","index","handleSearch","fn","wait","timeout","args","clearTimeout","setTimeout","debounce","mainContent","to","InputBase","placeholder","onChange","value","input","inputProps","md","lg","itemCount","itemSize","Hidden","mdDown","CircularProgress","a","response","data","status","feed","entry","console","log","savedFavoriteCards","savedFavoriteCardsReducer","saved","overflowY","contentTop","flexWrap","imageWrap","iconFavorite","bottom","actionWrap","Album","breakpoint","useRef","contentHeight","setContentHeight","contentWidth","setContentWidth","current","focus","parentNode","clientHeight","clientWidth","propEqual","prevProps","nextProps","ResponsiveGridLayout","WidthProvider","Responsive","buttonWrap","button","borderColor","ResponsiveGrid","saveFavoriteCardsInOrder","layout","setLayout","currentBreakpoint","setBreakpoint","windowWidth","setWindowWidth","getWindowWidth","window","innerWidth","makeLayout","albumItemsInOrder","forEach","savedId","push","unsavedItems","includes","albumsLayout","i","x","y","Math","floor","w","h","handleResize","addEventListener","removeEventListener","outlined","favoritesInSavedOrder","yMax","max","sort","b","order","layouts","containerPadding","cols","resizeHandles","onBreakpointChange","onLayoutChange","currentLayout","allLayout","favorites","FavoriteAlbums","replaceFavoriteAlbums","setFavorites","isCardMode","setIsCardMode","ItemList","draggableId","provided","innerRef","draggableProps","dragHandleProps","toggleDisplayButton","IDs1","IDs2","toString","onDragEnd","results","destination","source","reordered","sourceIndex","destIndex","splice","removed","reorder","droppableId","droppableProps","App","CssBaseline","exact","path","element","capitalizeFirstChar","toDoListReducer","tasks","str","arr","split","toUpperCase","join","reducers","combineReducers","filtered","task","newTitle","createTheme","palette","primary","main","dark","light","secondary","text","overrides","MuiSwitch","MuiFormControlLabel","MuiToolbar","MuiButton","minWidth","MuiTypography","h3","fontFamily","h4","h5","h6","subtitle1","muiTheme","responsiveFontSizes","factor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","composeEnhancers","compose","store","createStore","applyMiddleware","thunk","app","ThemeProvider","basename","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5682c3ff.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nexport const axiosMusic = axios.create({\r\n    baseURL: 'https://itunes.apple.com/us/rss/topalbums/limit=100/json',\r\n    //baseURL: 'https://rss.applemarketingtools.com/api/v2/us/music/most-played/10/albums.json',\r\n    //baseURL: 'https://rss.applemarketingtools.com/api/v2/us/music/most-played/100/albums.json',\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n        Accept: 'application/json'\r\n    }\r\n})\r\n\r\nexport const axiosToDoList = axios.create({\r\n    baseURL: 'https://app-todos-7e91c-default-rtdb.firebaseio.com/tasks.json',\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n        Accept: 'application/json'\r\n    }\r\n})\r\n","export const FETCH_ALBUMS_START = 'FETCH_ALBUMS_START'\r\nexport const FETCH_ALBUMS_SUCCESS = 'FETCH_ALBUMS_SUCCESS'\r\nexport const FETCH_ALBUMS_FAILED = 'FETCH_ALBUMS_FAILED'\r\nexport const FILTER_ALBUMS = 'FILTER_ALBUMS'\r\n\r\nexport const TOGGLE_FAVORITE = 'TOGGLE_FAVORITE'\r\nexport const CLEAR_FAVORITES = 'CLEAR_FAVORITES'\r\n\r\nexport const ADD_FAVORITE = 'ADD_FAVORITE'\r\nexport const REMOVE_FAVORITE = 'REMOVE_FAVORITE'\r\nexport const REPLACE_FAVORITES = 'REPLACE_FAVORITES'\r\nexport const SAVE_FAVORITES_CARDS_ORDER = 'SAVE_FAVORITES_CARDS_ORDER'\r\n\r\nexport const FETCH_TODOLIST_SUCCESS = 'FETCH_TODOLIST_SUCCESS'\r\nexport const FETCH_TODOLIST_FAILED = 'FETCH_TODOLIST_FAILED'\r\n\r\nexport const UPDATE_TASK = 'UPDATE_TASK'\r\nexport const DELETE_TASK = 'DELETE_TASK'\r\n","import { createSelector } from 'reselect'\r\nimport { axiosMusic } from '../axios'\r\nimport {\r\n    FETCH_ALBUMS_START,\r\n    FETCH_ALBUMS_SUCCESS,\r\n    FETCH_ALBUMS_FAILED,\r\n    TOGGLE_FAVORITE,\r\n    CLEAR_FAVORITES,\r\n    FILTER_ALBUMS\r\n} from './actionTypes'\r\n\r\n// Actions -----\r\n// Fetch\r\nconst fetchStarted = () => ({\r\n    type: FETCH_ALBUMS_START\r\n})\r\n\r\nconst fetchFailed = () => ({\r\n    type: FETCH_ALBUMS_FAILED\r\n})\r\n\r\nconst fetchSuccess = (albums, copy) => ({\r\n    type: FETCH_ALBUMS_SUCCESS,\r\n    albums,\r\n    copy\r\n})\r\n\r\nexport const filterAlbums = (searchKey) => ({\r\n    type: FILTER_ALBUMS,\r\n    searchKey\r\n})\r\n\r\n// Favorites\r\nexport const fetchAlbums = () => async (dispatch) => {\r\n    dispatch(fetchStarted())\r\n    try {\r\n        const response = await axiosMusic.get()\r\n        if (!response || !response.data || response.status !== 200) {\r\n            dispatch(fetchFailed())\r\n        } else {\r\n            const albums = (response.data.feed.entry && getAlbumInfo(response.data.feed.entry)) || []\r\n            const copy = deepCopy(albums)\r\n            dispatch(fetchSuccess(albums, copy))\r\n        }\r\n    } catch (e) {\r\n        console.log('Error', e)\r\n        dispatch(fetchFailed())\r\n    }\r\n}\r\n\r\nexport const toggleFavorite = (id) => ({\r\n    type: TOGGLE_FAVORITE,\r\n    id\r\n})\r\n\r\nexport const clearFavorites = () => ({\r\n    type: CLEAR_FAVORITES\r\n})\r\n\r\n// Reducer -----\r\n// Fetch\r\nconst initState = {\r\n    pending: false,\r\n    success: false,\r\n    items: [],\r\n    origItems: [] // keep the original copy\r\n}\r\n\r\nlet origItems = []\r\n\r\nexport const albumsReducer = (state = initState, action = {}) => {\r\n    let filtered = null\r\n    switch (action.type) {\r\n        case FETCH_ALBUMS_START:\r\n            return { ...state, pending: true }\r\n\r\n        case FETCH_ALBUMS_SUCCESS:\r\n            origItems = action.copy\r\n            return {\r\n                ...state,\r\n                pending: false,\r\n                success: true,\r\n                items: action.albums\r\n            }\r\n\r\n        case FETCH_ALBUMS_FAILED:\r\n            return initState\r\n\r\n        case FILTER_ALBUMS:\r\n            filtered =\r\n                action.searchKey === '' ? deepCopy(origItems) : filterByKey(deepCopy(origItems), action.searchKey)\r\n            return { ...state, items: filtered }\r\n\r\n        case TOGGLE_FAVORITE:\r\n            origItems = toggleSelection([...origItems], action.id)\r\n            return {\r\n                ...state,\r\n                items: toggleSelection([...state.items], action.id)\r\n            }\r\n\r\n        case CLEAR_FAVORITES:\r\n            return initState\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// Selectors\r\nexport const getAlbums = (state) => state.albumsReducer\r\n\r\n// memorized selectors\r\nexport const albumItems = createSelector(getAlbums, (albums) => albums.items)\r\n\r\nexport const isAlbumsPending = createSelector(getAlbums, (albums) => albums.pending)\r\n\r\nexport const isAlbumsSuccess = createSelector(getAlbums, (albums) => albums.success)\r\n\r\nexport const allFavoriteAlbums = createSelector(albumItems, (items) => items.filter((item) => item.selected))\r\n\r\n// Helpers ---\r\n// Deep copy array of obj - otherwise the copy will maintain the reference to the original array\r\nconst deepCopy = (array) => (!array.length ? [] : array.map((obj) => ({ ...obj })))\r\n\r\nconst filterByKey = (items, key) => {\r\n    const regexKey = new RegExp(key, 'i')\r\n    return items.filter((item) => item.artist.match(regexKey) || item.title.match(regexKey))\r\n}\r\n\r\nconst getAlbumInfo = (albums) => {\r\n    return albums.map((item) => {\r\n        return {\r\n            id: item.id.attributes['im:id'],\r\n            image: item['im:image'][2].label,\r\n            artistFull: item['im:artist'].label,\r\n            artist:\r\n                item['im:artist'].label.length > 40\r\n                    ? `${item['im:artist'].label.substring(0, 40)}...`\r\n                    : item['im:artist'].label,\r\n            titleFull: item['im:name'].label,\r\n            title:\r\n                item['im:name'].label.length > 50\r\n                    ? `${item['im:name'].label.substring(0, 50)}...`\r\n                    : item['im:name'].label,\r\n            link: item.link.attributes.href,\r\n            price: item['im:price'].label,\r\n            releaseDate: item['im:releaseDate'].attributes ? item['im:releaseDate'].attributes.label : '',\r\n            selected: false\r\n        }\r\n    })\r\n}\r\n\r\nconst toggleSelection = (albums, selectedId) =>\r\n    albums.map((item) => {\r\n        if (item.id === selectedId) {\r\n            item.selected = !item.selected\r\n        }\r\n        return item\r\n    })\r\n","import { ADD_FAVORITE, REMOVE_FAVORITE, REPLACE_FAVORITES } from './actionTypes'\r\n\r\nexport const addFavoriteAlbum = (item) => ({\r\n    type: ADD_FAVORITE,\r\n    item\r\n})\r\n\r\nexport const removeFavoriteAlbum = (id) => ({\r\n    type: REMOVE_FAVORITE,\r\n    id\r\n})\r\n\r\nexport const replaceFavoriteAlbums = (favorites) => ({\r\n    type: REPLACE_FAVORITES,\r\n    favorites\r\n})\r\n\r\nconst init = []\r\nexport const favoriteAlbumsReducer = (state = init, action = {}) => {\r\n    switch (action.type) {\r\n        case ADD_FAVORITE:\r\n            return [...state, action.item]\r\n\r\n        case REPLACE_FAVORITES:\r\n            return action.favorites\r\n\r\n        case REMOVE_FAVORITE:\r\n            return state.filter((item) => item.id !== action.id)\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// selectors\r\nexport const favoriteAlbums = (state) => state.favoriteAlbumsReducer\r\n","import React from 'react'\r\nimport { withStyles, useTheme } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport MuiDialogContent from '@material-ui/core/DialogContent'\r\nimport MuiDialogActions from '@material-ui/core/DialogActions'\r\nimport Slide from '@material-ui/core/Slide'\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\r\n\r\nconst CustomModalDialog = withStyles((theme) => ({\r\n    container: {\r\n        alignItems: 'center'\r\n    },\r\n    root: {\r\n        [theme.breakpoints.only('xs')]: {\r\n            width: '100%',\r\n            height: '98%',\r\n            '@media (orientation: landscape)': {\r\n                height: '90%'\r\n            }\r\n        }\r\n    },\r\n    paper: {\r\n        width: '50%',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        [theme.breakpoints.down('md')]: {\r\n            width: '60%'\r\n        },\r\n        [theme.breakpoints.down('sm')]: {\r\n            width: '80%'\r\n        },\r\n        [theme.breakpoints.only('xs')]: {\r\n            width: '100%',\r\n            height: 'auto',\r\n            minHeight: '350px',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            '@media (orientation: landscape)': {\r\n                height: '90%'\r\n            }\r\n        }\r\n    }\r\n}))(Dialog)\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n    root: {\r\n        padding: theme.spacing(2),\r\n        width: '90%',\r\n        [theme.breakpoints.only('xs')]: {\r\n            '@media (orientation: landscape)': {\r\n                marginTop: '20px'\r\n            }\r\n        }\r\n    }\r\n}))(MuiDialogContent)\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n    root: {\r\n        width: '90%',\r\n        margin: 0,\r\n        padding: theme.spacing(1, 2),\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'flex-end'\r\n    }\r\n}))(MuiDialogActions)\r\n\r\nconst Transition = React.forwardRef((props, ref) => {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />\r\n})\r\n\r\nconst ModalDialog = ({ open, closeModal, children }) => {\r\n    const theme = useTheme()\r\n    const fullScreen = useMediaQuery(theme.breakpoints.only('xs'))\r\n\r\n    return (\r\n        <div>\r\n            <CustomModalDialog fullScreen={fullScreen} open={open} TransitionComponent={Transition} maxWidth=\"lg\">\r\n                <DialogContent dividers>{children}</DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={closeModal} color=\"primary\">\r\n                        Close\r\n                    </Button>\r\n                </DialogActions>\r\n            </CustomModalDialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ModalDialog\r\n","import ModalDialog from './ModalDialog'\r\n\r\nexport default ModalDialog\r\n","import React from 'react'\r\nimport Card from '@material-ui/core/Card'\r\nimport CardMedia from '@material-ui/core/CardMedia'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport HeartIcon from '@material-ui/icons/FavoriteBorder'\r\nimport HeartIconFilled from '@material-ui/icons/Favorite'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { makeStyles } from '@material-ui/core'\r\nimport ModalDialog from '../ModalDialog'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        [theme.breakpoints.up('sm')]: {\r\n            paddingTop: '4px',\r\n            '&:last-child': {\r\n                paddingBottom: 0\r\n            }\r\n        }\r\n    },\r\n    cardWrap: {\r\n        height: '100%',\r\n        width: '100%',\r\n        display: 'flex ',\r\n        flexDirection: 'row',\r\n        boxShadow: 'none',\r\n        [theme.breakpoints.only('xs')]: {\r\n            height: '90%',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n            '@media (orientation: landscape)': {\r\n                marginTop: '20px',\r\n                height: 'auto'\r\n            }\r\n        }\r\n    },\r\n    media: {\r\n        width: '180px',\r\n        height: '180px'\r\n    },\r\n    albumTitle: {\r\n        fontWeight: 700,\r\n        fontSize: '1.2rem',\r\n        [theme.breakpoints.only('xs')]: {\r\n            fontSize: '0.9rem'\r\n        }\r\n    },\r\n    icon: {\r\n        position: 'absolute',\r\n        right: 1,\r\n        top: 0\r\n    },\r\n    heartIconFilled: {\r\n        color: 'red'\r\n    },\r\n    content: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-between'\r\n    }\r\n}))\r\n\r\nconst AlbumModal = ({\r\n    handleClickFavorite,\r\n    closeModal,\r\n    openModal,\r\n    id,\r\n    image,\r\n    link,\r\n    selected,\r\n    artistFull,\r\n    titleFull,\r\n    price,\r\n    releaseDate\r\n}) => {\r\n    const classes = useStyles()\r\n\r\n    const handleClickHeartIcon = (e) => {\r\n        e.stopPropagation()\r\n        e.preventDefault()\r\n        handleClickFavorite()\r\n    }\r\n\r\n    return (\r\n        <ModalDialog open={openModal} closeModal={closeModal}>\r\n            <Card className={classes.cardWrap}>\r\n                <CardMedia\r\n                    className={classes.media}\r\n                    component=\"img\"\r\n                    alt=\"Cover Image\"\r\n                    title=\"Cover Image\"\r\n                    image={image}\r\n                />\r\n                <IconButton className={classes.icon} onClick={handleClickHeartIcon}>\r\n                    {selected ? <HeartIconFilled className={classes.heartIconFilled} /> : <HeartIcon />}\r\n                </IconButton>\r\n\r\n                <CardContent classes={{ root: classes.card }}>\r\n                    <div className={classes.content}>\r\n                        <div>\r\n                            <Typography className={classes.albumTitle} variant=\"h4\">\r\n                                {artistFull}\r\n                            </Typography>\r\n                            <Typography variant=\"body1\">{titleFull}</Typography>\r\n                        </div>\r\n                        <div>\r\n                            <Typography variant=\"body2\">\r\n                                Price: {price}; Release date: {releaseDate}\r\n                            </Typography>\r\n                            <a href={link} target=\"_blank\" size=\"small\" color=\"primary\" rel=\"noreferrer\">\r\n                                <Typography variant=\"body2\">Go to Music </Typography>\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </ModalDialog>\r\n    )\r\n}\r\n\r\nexport default AlbumModal\r\n","import AlbumModal from './AlbumModal'\r\n\r\nexport default AlbumModal\r\n","import React, { useState, useCallback } from 'react'\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Card from '@material-ui/core/Card'\r\nimport CardMedia from '@material-ui/core/CardMedia'\r\nimport CardActions from '@material-ui/core/CardActions'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport HeartIcon from '@material-ui/icons/FavoriteBorder'\r\nimport HeartIconFilled from '@material-ui/icons/Favorite'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { makeStyles } from '@material-ui/core'\r\nimport AlbumModal from '../AlbumModal'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    listItemWrap: {\r\n        height: '97%',\r\n        width: '100%'\r\n    },\r\n    contentWrap: {\r\n        height: '100%',\r\n        width: '100%',\r\n        display: 'flex ',\r\n        flexDirection: 'row'\r\n    },\r\n    root: {\r\n        padding: 0,\r\n        width: '100%',\r\n        height: '100%',\r\n        border: '1px #e2e2e2 solid',\r\n        boxShadow: 'none',\r\n        borderRadius: 0,\r\n        '&:hover': {\r\n            backgroundColor: 'rgba(230, 246, 247, 0.7)'\r\n        },\r\n        '&:focus, &:active, &.active': {\r\n            boxShadow: 'rgba(0, 0, 0, 0.24) 0px 3px 8px',\r\n            backgroundColor: 'rgb(230, 246, 247)',\r\n            webkitTransform: 'scale(0.99)',\r\n            mozTtransform: 'scale(0.99)',\r\n            oTransform: 'scale(0.99)',\r\n            transform: 'scale(0.99)'\r\n        }\r\n    },\r\n    contentWrapInner: {\r\n        height: '100%',\r\n        display: 'flex ',\r\n        flexDirection: 'row'\r\n    },\r\n    media: {\r\n        width: '100%'\r\n    },\r\n    content: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        padding: theme.spacing(0, 2),\r\n\r\n        textOverflow: 'ellipsis',\r\n        [theme.breakpoints.only('xs')]: {\r\n            display: 'flex ',\r\n            flexDirection: 'column',\r\n            width: '100%',\r\n            height: '70%'\r\n        }\r\n    },\r\n    albumTitle: {\r\n        fontWeight: 700,\r\n        fontSize: '1.2rem',\r\n        [theme.breakpoints.only('xs')]: {\r\n            fontSize: '0.9rem'\r\n        }\r\n    },\r\n    link: {\r\n        display: 'block',\r\n        [theme.breakpoints.only('xs')]: {\r\n            display: 'none'\r\n        }\r\n    },\r\n    action: {\r\n        height: '100%',\r\n        display: 'flex',\r\n        justifyContent: 'space-around',\r\n        alignItems: 'flex-start',\r\n        [theme.breakpoints.only('xs')]: {\r\n            paddingRight: theme.spacing(2)\r\n        }\r\n    },\r\n    icon: {\r\n        padding: 0\r\n    },\r\n    heartIconFilled: {\r\n        color: 'red'\r\n    }\r\n}))\r\n\r\nconst AlbumListItem = ({\r\n    item,\r\n    selected,\r\n    maxImgHeight,\r\n    showAlbumInfo,\r\n    toggleFavorite,\r\n    addFavoriteAlbum,\r\n    removeFavoriteAlbum\r\n}) => {\r\n    const classes = useStyles()\r\n    const [openModal, setOpenModal] = useState(false)\r\n    const isScreenLgUp = useMediaQuery({ query: '(min-width: 1280px)' })\r\n\r\n    const handleClickFavorite2 = useCallback(() => {\r\n        if (item.id === '') return\r\n\r\n        if (item.selected) {\r\n            removeFavoriteAlbum(item.id)\r\n        } else {\r\n            const itemCopy = { ...item }\r\n            itemCopy.selected = true\r\n            addFavoriteAlbum(itemCopy)\r\n        }\r\n        toggleFavorite(item.id)\r\n    }, [removeFavoriteAlbum, addFavoriteAlbum, toggleFavorite, item])\r\n\r\n    const handleClickFavorite = () => {\r\n        if (item.id === '') return\r\n\r\n        if (item.selected) {\r\n            removeFavoriteAlbum(item.id)\r\n        } else {\r\n            const itemCopy = { ...item }\r\n            itemCopy.selected = true\r\n            addFavoriteAlbum(itemCopy)\r\n        }\r\n        toggleFavorite(item.id)\r\n    }\r\n\r\n    const handleCardClick = () => {\r\n        if (!isScreenLgUp) {\r\n            setOpenModal((prev) => !prev)\r\n        } else {\r\n            showAlbumInfo(item)\r\n        }\r\n    }\r\n\r\n    const closeModal = () => {\r\n        setOpenModal(false)\r\n    }\r\n\r\n    // console.log('*** render album list item')\r\n    return (\r\n        <div className={classes.listItemWrap}>\r\n            <Card\r\n                className={classes.root}\r\n                onClick={handleCardClick}\r\n                style={{ backgroundColor: selected ? 'rgb(230, 246, 247)' : 'none' }}>\r\n                <Grid container className={classes.contentWrap}>\r\n                    <Grid item xs={10} sm={9} className={classes.contentWrapInner}>\r\n                        <CardMedia\r\n                            className={classes.media}\r\n                            style={{ height: maxImgHeight, width: maxImgHeight }}\r\n                            component=\"img\"\r\n                            alt=\"Cover Image\"\r\n                            title=\"Cover Image\"\r\n                            image={item.image}\r\n                        />\r\n                        <CardContent classes={{ root: classes.content }}>\r\n                            <Typography className={classes.albumTitle} variant=\"caption\">\r\n                                {item.artist}\r\n                            </Typography>\r\n                            <Typography variant=\"caption\">{item.title}</Typography>\r\n                        </CardContent>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={2} sm={3}>\r\n                        <CardActions className={classes.action}>\r\n                            <a href={item.link} className={classes.link} target=\"_blank\" rel=\"noreferrer\">\r\n                                Go to Music\r\n                            </a>\r\n                            <IconButton className={classes.icon} onClick={handleClickFavorite}>\r\n                                {item.selected ? (\r\n                                    <HeartIconFilled className={classes.heartIconFilled} />\r\n                                ) : (\r\n                                    <HeartIcon />\r\n                                )}\r\n                            </IconButton>\r\n                        </CardActions>\r\n                    </Grid>\r\n                </Grid>\r\n            </Card>\r\n            {openModal && (\r\n                <AlbumModal\r\n                    openModal={openModal}\r\n                    id={item.id}\r\n                    image={item.image}\r\n                    link={item.link}\r\n                    selected={item.selected}\r\n                    artistFull={item.artistFull}\r\n                    titleFull={item.titleFull}\r\n                    price={item.price}\r\n                    releaseDate={item.releaseDate}\r\n                    closeModal={closeModal}\r\n                    handleClickFavorite={handleClickFavorite}\r\n                />\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AlbumListItem\r\n","import { connect } from 'react-redux'\r\nimport { toggleFavorite } from '../../store/albums'\r\nimport { addFavoriteAlbum, removeFavoriteAlbum } from '../../store/favoriteAlbums'\r\nimport AlbumListItem from './AlbumListItem'\r\n\r\nexport default connect(null, { toggleFavorite, addFavoriteAlbum, removeFavoriteAlbum })(AlbumListItem)\r\n","import AlbumInfo from './AlbumInfo'\n\nexport default AlbumInfo\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\nconst AlbumInfo = ({ image, artistFull, titleFull, price, releaseDate, link }) => {\n    return (\n        <div className=\"album-info-content\">\n            <div>\n                <img alt=\"cover\" src={image} />\n            </div>\n            <Typography align=\"center\" gutterBottom variant=\"h5\" component=\"div\">\n                {artistFull}\n            </Typography>\n            <Typography align=\"center\" gutterBottom variant=\"h5\" component=\"div\">\n                {titleFull}\n            </Typography>\n            <Typography variant=\"subtitle1\" component=\"div\">\n                Price: {price}\n            </Typography>\n            <Typography variant=\"subtitle1\" component=\"div\">\n                Release: {releaseDate}\n            </Typography>\n            <a className=\"album-link\" href={link} target=\"_blank\" rel=\"noreferrer\">\n                Go to Music\n            </a>\n        </div>\n    )\n}\n\nexport default AlbumInfo\n","import React, { Fragment, useEffect, useState, useCallback } from 'react'\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Link, useLocation } from 'react-router-dom'\r\nimport { FixedSizeList } from 'react-window'\r\nimport AutoSizer from 'react-virtualized-auto-sizer'\r\nimport { makeStyles } from '@material-ui/core'\r\nimport InputBase from '@material-ui/core/InputBase'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Hidden from '@material-ui/core/Hidden'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Button from '@material-ui/core/Button'\r\nimport SearchIcon from '@material-ui/icons/Search'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport AlbumListItem from '../AlbumListItem'\r\nimport AlbumInfo from '../AlbumInfo'\r\nimport './styles.css'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: '100%',\r\n        paddingTop: theme.spacing(2)\r\n    },\r\n    spinner: {\r\n        width: '100%',\r\n        height: '50vh'\r\n    },\r\n    searchWrap: {\r\n        position: 'relative',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        paddingBottom: theme.spacing(2)\r\n    },\r\n    search: {\r\n        position: 'relative'\r\n    },\r\n    searchIcon: {\r\n        padding: theme.spacing(0, 2),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        color: '#008fb8',\r\n        zIndex: 4\r\n    },\r\n    inputRoot: {\r\n        borderRadius: '4px',\r\n        color: 'inherit'\r\n    },\r\n    inputInput: {\r\n        zIndex: 2,\r\n        backgroundColor: 'white',\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        border: '1px solid #008fb8',\r\n        borderRadius: '4px',\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        '&:hover': {\r\n            borderWidth: '2px'\r\n        },\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '20ch'\r\n        }\r\n    }\r\n}))\r\n\r\nconst ITEM_HEIGHT = 120\r\n\r\nconst useQuery = () => new URLSearchParams(useLocation().search)\r\n\r\nconst Albums = ({ albumItems, fetchAlbums, filterAlbums, isAlbumsPending, isAlbumsSuccess }) => {\r\n    const isScreenLgUp = useMediaQuery({ query: '(min-width: 1280px)' })\r\n    const query = useQuery()\r\n    const classes = useStyles()\r\n    const dispatch = useDispatch()\r\n    const [searchKey, setSearchKey] = useState('')\r\n    const [selectedItem, setSelectedItem] = useState((albumItems && albumItems[0]) || {})\r\n    const [favoriteDisplay, setFavoriteDisplay] = useState(query.get('type') || 'list')\r\n\r\n    useEffect(() => {\r\n        if (searchKey === '' && (!albumItems || !albumItems.length)) {\r\n            dispatch(fetchAlbums)\r\n        }\r\n        /* eslint-disable-next-line */\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (albumItems && albumItems.length && isScreenLgUp) {\r\n            setSelectedItem((albumItems && albumItems[0]) || {})\r\n        }\r\n    }, [albumItems, isScreenLgUp])\r\n\r\n    const showAlbumInfo = useCallback((item) => {\r\n        setSelectedItem(item)\r\n    }, [])\r\n\r\n    const Rows = React.memo(({ index, style, ...rest }) => {\r\n        const { id, image, artist, title, link, selected, artistFull, titleFull, price, releaseDate } =\r\n            albumItems[index]\r\n\r\n        const item = { id, image, artist, title, link, selected, artistFull, titleFull, price, releaseDate }\r\n\r\n        return (\r\n            <div style={{ ...style, width: '100%' }}>\r\n                <AlbumListItem\r\n                    item={item}\r\n                    selected={(selectedItem && selectedItem.id === item.id) || false}\r\n                    maxImgHeight={ITEM_HEIGHT}\r\n                    showAlbumInfo={showAlbumInfo}\r\n                />\r\n            </div>\r\n        )\r\n    })\r\n\r\n    const debounce = (fn, wait) => {\r\n        let timeout = null\r\n\r\n        return (...args) => {\r\n            clearTimeout(timeout)\r\n            timeout = setTimeout(() => {\r\n                fn(...args)\r\n            }, [wait])\r\n        }\r\n    }\r\n\r\n    const handleSearch = debounce((key) => {\r\n        filterAlbums(key)\r\n    }, 250)\r\n\r\n    const handleChange = (e) => {\r\n        const key = e.target.value\r\n        setSearchKey(key)\r\n        handleSearch(key)\r\n    }\r\n\r\n    const clearFilter = () => {\r\n        setSearchKey('')\r\n        filterAlbums('')\r\n    }\r\n\r\n    const mainContent = (\r\n        <div>\r\n            <Grid container justifyContent=\"center\" classes={{ root: classes.root }}>\r\n                <Grid item xs={12}>\r\n                    <div className=\"page-top-link\">\r\n                        <Link className=\"link\" to={`/favorites?type=${favoriteDisplay}`}>\r\n                            Favorite Albums\r\n                        </Link>\r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs={12} className=\"page-title\">\r\n                    <div>\r\n                        <Typography variant=\"h3\" align=\"center\" component=\"div\">\r\n                            Top 100 Albums\r\n                        </Typography>\r\n                        <Typography variant=\"h6\" align=\"center\" color=\"textSecondary\" component=\"div\">\r\n                            List in Virtual Window\r\n                        </Typography>\r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs={12} className={classes.searchWrap}>\r\n                    <div className={classes.search}>\r\n                        <div className={classes.searchIcon}>\r\n                            <SearchIcon />\r\n                        </div>\r\n                        <InputBase\r\n                            placeholder=\"Search…\"\r\n                            onChange={handleChange}\r\n                            value={searchKey}\r\n                            classes={{\r\n                                root: classes.inputRoot,\r\n                                input: classes.inputInput\r\n                            }}\r\n                            inputProps={{ 'aria-label': 'search' }}\r\n                        />\r\n                    </div>\r\n                    <Button size=\"small\" variant=\"outlined\" onClick={clearFilter}>\r\n                        Clear\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Grid container spacing={2} className=\"albums-wrap\">\r\n                {(!albumItems || !albumItems.length) && (\r\n                    <Grid item xs={12} sm={10} md={8} lg={6} className=\"albums-list\">\r\n                        <Typography variant=\"h6\" align=\"center\">\r\n                            No items\r\n                        </Typography>\r\n                    </Grid>\r\n                )}\r\n                {albumItems && albumItems.length > 0 && (\r\n                    <Fragment>\r\n                        <Grid item xs={12} sm={10} md={8} lg={6} className=\"albums-list\">\r\n                            <AutoSizer>\r\n                                {({ height, width }) => (\r\n                                    <FixedSizeList\r\n                                        className=\"List\"\r\n                                        height={height}\r\n                                        itemCount={albumItems.length}\r\n                                        itemSize={ITEM_HEIGHT}\r\n                                        width={width}>\r\n                                        {Rows}\r\n                                    </FixedSizeList>\r\n                                )}\r\n                            </AutoSizer>\r\n                        </Grid>\r\n\r\n                        <Hidden mdDown>\r\n                            <Grid item lg={4} className=\"album-info\">\r\n                                {selectedItem && selectedItem.artist ? (\r\n                                    <AlbumInfo\r\n                                        image={selectedItem.image}\r\n                                        artistFull={selectedItem.artistFull}\r\n                                        titleFull={selectedItem.titleFull}\r\n                                        price={selectedItem.price}\r\n                                        releaseDate={selectedItem.releaseDate}\r\n                                        link={selectedItem.link}\r\n                                    />\r\n                                ) : (\r\n                                    <div className=\"album-info-content\">\r\n                                        <Typography align=\"center\" gutterBottom variant=\"h6\" component=\"div\">\r\n                                            No item selected\r\n                                        </Typography>\r\n                                    </div>\r\n                                )}\r\n                            </Grid>\r\n                        </Hidden>\r\n                    </Fragment>\r\n                )}\r\n            </Grid>\r\n        </div>\r\n    )\r\n    //console.log('*** render albums')\r\n\r\n    return isAlbumsPending && !isAlbumsSuccess ? (\r\n        <Grid container justifyContent=\"center\" alignItems=\"center\" classes={{ root: classes.spinner }}>\r\n            <CircularProgress color=\"primary\" />\r\n        </Grid>\r\n    ) : (\r\n        mainContent\r\n    )\r\n}\r\n\r\nexport default Albums\r\n","import { connect } from 'react-redux'\r\nimport { albumItems, fetchAlbums, filterAlbums, isAlbumsPending, isAlbumsSuccess } from '../../store/albums'\r\n\r\nimport Albums from './Albums'\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        albumItems: albumItems(state),\r\n        isAlbumsPending: isAlbumsPending(state),\r\n        isAlbumsSuccess: isAlbumsSuccess(state)\r\n    }\r\n}\r\n\r\n// const makeMapStateToProps = () => {\r\n//     const getFilteredAlbums = makeFilteredAlbums()\r\n//     const mapStateToProps = (state, props) => {\r\n//         return {\r\n//             albumItems: albumItems(state),\r\n//             filteredAlbums: getFilteredAlbums(state, props)\r\n//         }\r\n//     }\r\n//     return mapStateToProps\r\n//}\r\n\r\nexport default connect(mapStateToProps, { fetchAlbums, filterAlbums })(Albums)\r\n","import { createSelector } from 'reselect'\r\nimport { SAVE_FAVORITES_CARDS_ORDER } from './actionTypes'\r\n\r\nexport const saveFavoriteCardsInOrder = (favorites) => ({\r\n    type: SAVE_FAVORITES_CARDS_ORDER,\r\n    favorites\r\n})\r\n\r\nconst init = []\r\nexport const savedFavoriteCardsReducer = (state = init, action = {}) => {\r\n    switch (action.type) {\r\n        case SAVE_FAVORITES_CARDS_ORDER:\r\n            return action.favorites\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// selectors\r\nconst getFavoriteCards = (state) => state.savedFavoriteCardsReducer\r\n\r\n// returns IDs in order\r\nexport const savedFavoriteCards = createSelector(getFavoriteCards, (saved) => saved.map((item) => item.id))\r\n","import React, { useRef, useEffect, useState, memo } from 'react'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { makeStyles } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        paddingBottom: theme.spacing(1),\r\n        margin: theme.spacing(1)\r\n    },\r\n    contentWrap: {\r\n        width: '96%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        overflowY: 'hidden',\r\n        justifyContent: 'flex-start'\r\n    },\r\n    contentTop: {\r\n        width: '96%',\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'flex-start',\r\n        flexWrap: 'wrap',\r\n        [theme.breakpoints.only('xs')]: {\r\n            width: '100%',\r\n            display: 'flex ',\r\n            flexDirection: 'column'\r\n        }\r\n    },\r\n    imageWrap: {\r\n        width: '30%',\r\n        [theme.breakpoints.only('sm')]: {\r\n            width: '60%'\r\n        },\r\n        [theme.breakpoints.only('xs')]: {\r\n            width: '100%'\r\n        }\r\n    },\r\n    image: {\r\n        width: '100%',\r\n        [theme.breakpoints.only('xs')]: {\r\n            width: '100px'\r\n        }\r\n    },\r\n    content: {\r\n        padding: theme.spacing(0, 1),\r\n        width: '70%',\r\n        textOverflow: 'ellipsis',\r\n        [theme.breakpoints.only('xs')]: {\r\n            display: 'none'\r\n        }\r\n    },\r\n    iconFavorite: {\r\n        padding: 0,\r\n        position: 'absolute',\r\n        right: 4,\r\n        top: 4,\r\n        [theme.breakpoints.only('xs')]: {\r\n            position: 'absolute',\r\n            bottom: 4,\r\n            right: 4\r\n        }\r\n    },\r\n    heartIconFilled: {\r\n        color: 'red'\r\n    },\r\n    albumTitle: {\r\n        fontWeight: 700,\r\n        [theme.breakpoints.only('xs')]: {\r\n            fontSize: '0.9rem'\r\n        }\r\n    },\r\n    actionWrap: {\r\n        padding: theme.spacing(2, 1),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        [theme.breakpoints.only('xs')]: {\r\n            display: 'none'\r\n        }\r\n    }\r\n}))\r\n\r\nconst Album = ({ item, height, breakpoint }) => {\r\n    const ref = useRef(null)\r\n    const [contentHeight, setContentHeight] = useState(height)\r\n    const [contentWidth, setContentWidth] = useState(null)\r\n    const classes = useStyles()\r\n\r\n    useEffect(() => {\r\n        if (ref && ref.current) {\r\n            ref.current.focus()\r\n            setContentHeight(ref.current.parentNode.clientHeight)\r\n        }\r\n    }, [height])\r\n\r\n    useEffect(() => {\r\n        if (ref && ref.current) {\r\n            ref.current.focus()\r\n            setContentWidth(ref.current.parentNode.clientWidth)\r\n        }\r\n    }, [breakpoint])\r\n\r\n    // console.log('*** render CARD')\r\n    return (\r\n        <div ref={ref} className={classes.root} style={{ height: contentHeight || 'auto', width: 'auto' }}>\r\n            <div\r\n                className={classes.contentWrap}\r\n                style={{ height: contentHeight ? contentHeight - 10 : 'atuo', width: contentWidth - 10 || 'auto' }}>\r\n                <div className={classes.contentTop}>\r\n                    <div className={classes.imageWrap}>\r\n                        <img className={classes.image} alt=\"cover\" src={item.image} />\r\n                    </div>\r\n                    <div className={classes.content}>\r\n                        <Typography className={classes.albumTitle} variant=\"body2\" component=\"div\">\r\n                            {item.artistFull}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" component=\"div\">\r\n                            {item.titleFull}\r\n                        </Typography>\r\n                    </div>\r\n                </div>\r\n                <div className={classes.actionWrap}>\r\n                    <Typography variant=\"body2\" component=\"div\">\r\n                        Price: {item.price}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" component=\"div\">\r\n                        Release: {item.releaseDate}\r\n                    </Typography>\r\n                    <a href={item.link} target=\"_blank\" size=\"small\" color=\"primary\" rel=\"noreferrer\">\r\n                        <Typography variant=\"body2\">Go to Music </Typography>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst propEqual = (prevProps, nextProps) =>\r\n    prevProps.item === nextProps.item &&\r\n    prevProps.height === nextProps.height &&\r\n    prevProps.breakpoint === nextProps.breakpoint\r\n\r\nconst memorizedAlbum = memo(Album, propEqual)\r\n\r\nexport default memorizedAlbum\r\n","import Album from './Album'\r\n\r\nexport default Album\r\n","import React, { Fragment, useEffect, useState, useCallback } from 'react'\r\nimport { Responsive, WidthProvider } from 'react-grid-layout'\r\nimport Button from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core'\r\nimport Album from '../Album'\r\n\r\nimport './styles.css'\r\nimport 'react-grid-layout/css/styles.css'\r\nimport 'react-resizable/css/styles.css'\r\n\r\nconst ResponsiveGridLayout = WidthProvider(Responsive)\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    buttonWrap: {\r\n        width: '100%',\r\n        display: 'flex',\r\n        justifyContent: 'center'\r\n    },\r\n    button: {\r\n        marginTop: theme.spacing(2),\r\n        borderColor: 'rgb(216, 155, 24)',\r\n        color: 'rgb(241, 140, 8)',\r\n        margin: theme.spacing(0, 0.5),\r\n        '&:hover': {\r\n            backgroundColor: 'rgba(241, 140, 8, 0.1)'\r\n        }\r\n    }\r\n}))\r\n\r\nconst ResponsiveGrid = ({ albumItems, savedFavoriteCards, saveFavoriteCardsInOrder, children }) => {\r\n    const [layout, setLayout] = useState([])\r\n    const [currentBreakpoint, setBreakpoint] = useState(null)\r\n    const [windowWidth, setWindowWidth] = useState(1200)\r\n\r\n    const classes = useStyles()\r\n\r\n    const getWindowWidth = useCallback(() => {\r\n        return (window && window.innerWidth) || 1200\r\n    }, [])\r\n\r\n    const makeLayout = useCallback(() => {\r\n        if (albumItems.length === 0) {\r\n            saveFavoriteCardsInOrder([])\r\n        }\r\n\r\n        let albumItemsInOrder = []\r\n        if (savedFavoriteCards && savedFavoriteCards.length) {\r\n            savedFavoriteCards.forEach((savedId) => {\r\n                albumItems.forEach((item) => {\r\n                    if (savedId === item.id) {\r\n                        albumItemsInOrder.push(item)\r\n                    }\r\n                })\r\n            })\r\n            const unsavedItems = albumItems.filter((item) => !savedFavoriteCards.includes(item.id))\r\n            albumItemsInOrder = [...albumItemsInOrder, ...unsavedItems]\r\n        }\r\n\r\n        const colNum = 3\r\n        const width = 1\r\n        const height = 1\r\n        let albumsLayout = []\r\n        if (albumItemsInOrder.length > 1) {\r\n            albumsLayout = albumItemsInOrder.map((item, index) => {\r\n                // x: 2 grid wide, y: 1 grid tall\r\n                // 4 columns per row\r\n                return {\r\n                    i: item.id,\r\n                    x: (index % colNum) * width,\r\n                    y: Math.floor(index / colNum) * 1,\r\n                    w: width,\r\n                    h: height\r\n                }\r\n            })\r\n        } else {\r\n            albumsLayout = albumItems.map((item, index) => {\r\n                return {\r\n                    i: item.id,\r\n                    x: (index % colNum) * width,\r\n                    y: Math.floor(index / colNum) * 1,\r\n                    w: width,\r\n                    h: height\r\n                }\r\n            })\r\n        }\r\n        const albumLayout = setLayout(albumsLayout)\r\n    }, [albumItems, savedFavoriteCards, saveFavoriteCardsInOrder])\r\n\r\n    const updatetGridHeightLookup = () => {\r\n        const heights = {}\r\n        setGridHeightLookup(heights)\r\n    }\r\n\r\n    useEffect(() => {\r\n        setWindowWidth(getWindowWidth())\r\n    }, [getWindowWidth])\r\n\r\n    useEffect(() => {\r\n        if (albumItems && albumItems.length) {\r\n            makeLayout()\r\n        }\r\n    }, [makeLayout, albumItems])\r\n\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            const width = getWindowWidth()\r\n            if (windowWidth !== width) setWindowWidth(width)\r\n        }\r\n        window.addEventListener('resize', handleResize)\r\n        return () => window.removeEventListener('resize', handleResize)\r\n    }, [getWindowWidth, windowWidth])\r\n\r\n    const handleBreakpointChange = (breakpoint) => {\r\n        if (breakpoint !== currentBreakpoint) {\r\n            setBreakpoint(breakpoint)\r\n        }\r\n    }\r\n\r\n    const handleLayoutChange = (currentLayout, allLayout) => {\r\n        setLayout([...currentLayout])\r\n    }\r\n\r\n    const handleSaveLayout = () => {\r\n        const col = 3\r\n        let favoritesInSavedOrder = []\r\n\r\n        const yMax = Math.max(...layout.map((item) => item.y))\r\n\r\n        for (let i = 0; i <= yMax; i++) {\r\n            favoritesInSavedOrder = [\r\n                ...favoritesInSavedOrder,\r\n                ...layout\r\n                    .filter((item) => item.y === i)\r\n                    .sort((a, b) => {\r\n                        return a.x > b.x ? 1 : b.x > a.x ? -1 : 0\r\n                    })\r\n            ]\r\n        }\r\n        favoritesInSavedOrder = favoritesInSavedOrder.map((item, i) => ({ id: item.i, order: i }))\r\n        saveFavoriteCardsInOrder(favoritesInSavedOrder)\r\n    }\r\n\r\n    if (!albumItems.length || !layout || !layout.length) return null\r\n\r\n    //console.log('*** render responsive grids')\r\n    return (\r\n        <Fragment>\r\n            <div className={classes.buttonWrap}>\r\n                {children}\r\n                <Button\r\n                    size=\"small\"\r\n                    classes={{ outlined: classes.button }}\r\n                    onClick={handleSaveLayout}\r\n                    variant=\"outlined\">\r\n                    Save Card Order\r\n                </Button>\r\n            </div>\r\n            <ResponsiveGridLayout\r\n                className=\"layout\"\r\n                layouts={{\r\n                    lg: layout,\r\n                    md: layout,\r\n                    sm: layout,\r\n                    xs: layout\r\n                }}\r\n                breakpoints={{ lg: 1200, md: 996, sm: 768, xs: 360 }}\r\n                containerPadding={{ lg: [80, 60], md: [80, 60], sm: [60, 60], xs: [10, 20] }}\r\n                cols={{ lg: 3, md: 3, sm: 3, xs: 3 }}\r\n                resizeHandles={['s']}\r\n                onBreakpointChange={handleBreakpointChange}\r\n                onLayoutChange={handleLayoutChange}>\r\n                {albumItems.map((item, i) => (\r\n                    <div className=\"contents\" key={item.id}>\r\n                        <Album item={item} height={layout[i].h} breakpoint={currentBreakpoint} />\r\n                    </div>\r\n                ))}\r\n            </ResponsiveGridLayout>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ResponsiveGrid\r\n","import { connect } from 'react-redux'\r\nimport { savedFavoriteCards, saveFavoriteCardsInOrder } from '../../store/savedFavoriteAblumCards'\r\nimport ResponsiveGrid from './ResponsiveGrid'\r\n\r\nconst mapStateToProps = (state, props) => ({\r\n    savedFavoriteCards: savedFavoriteCards(state)\r\n})\r\nexport default connect(mapStateToProps, { saveFavoriteCardsInOrder })(ResponsiveGrid)\r\n","import React, { useState, useEffect, useCallback } from 'react'\r\nimport { Link, useLocation } from 'react-router-dom'\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd'\r\nimport { makeStyles } from '@material-ui/core'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Button from '@material-ui/core/Button'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Hidden from '@material-ui/core/Hidden'\r\nimport AlbumListItem from '../AlbumListItem'\r\nimport ResponsiveGrid from '../ResponsiveGrid'\r\nimport AlbumInfo from '../AlbumInfo'\r\nimport '../Albums/styles.css'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: '100%',\r\n        paddingTop: theme.spacing(2)\r\n    },\r\n    buttonWrap: {\r\n        width: '40vw',\r\n        display: 'flex',\r\n        justifyContent: 'center'\r\n    },\r\n    button: {\r\n        marginTop: theme.spacing(2),\r\n        borderColor: 'rgb(216, 155, 24)',\r\n        color: 'rgb(241, 140, 8)',\r\n        margin: theme.spacing(0, 0.5),\r\n        '&:hover': {\r\n            backgroundColor: 'rgba(241, 140, 8, 0.1)'\r\n        }\r\n    }\r\n}))\r\n\r\nconst ITEM_HEIGHT = 120\r\n\r\nconst useQuery = () => new URLSearchParams(useLocation().search)\r\n\r\nconst FavoriteAlbums = ({ favoriteAlbums, replaceFavoriteAlbums }) => {\r\n    const query = useQuery()\r\n    const [favorites, setFavorites] = useState([...favoriteAlbums])\r\n    const [isCardMode, setIsCardMode] = useState(query.get('type') === 'card')\r\n    const [selectedItem, setSelectedItem] = useState((favoriteAlbums && favoriteAlbums[0]) || {})\r\n\r\n    const classes = useStyles()\r\n\r\n    useEffect(() => {\r\n        setFavorites([...favoriteAlbums])\r\n    }, [favoriteAlbums])\r\n\r\n    const reorder = (sourceIndex, destIndex) => {\r\n        const array = [...favorites]\r\n        const [removed] = array.splice(sourceIndex, 1)\r\n        array.splice(destIndex, 0, removed)\r\n        return array\r\n    }\r\n\r\n    const handleSaveOrder = () => {\r\n        const IDs1 = favoriteAlbums.map((item) => item.id)\r\n        const IDs2 = favorites.map((item) => item.id)\r\n\r\n        // No updates\r\n        if (IDs1.toString() === IDs2.toString()) return\r\n        replaceFavoriteAlbums(favorites)\r\n    }\r\n\r\n    const showAlbumInfo = useCallback((item) => {\r\n        setSelectedItem(item)\r\n    }, [])\r\n\r\n    const ItemList = React.memo(({ items }) => {\r\n        return items.map((item, index) => (\r\n            <Draggable draggableId={item.id} index={index} key={item.id}>\r\n                {(provided) => (\r\n                    <div ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\r\n                        <AlbumListItem\r\n                            item={item}\r\n                            selected={(selectedItem && selectedItem.id === item.id) || false}\r\n                            maxImgHeight={ITEM_HEIGHT}\r\n                            showAlbumInfo={showAlbumInfo}\r\n                        />\r\n                    </div>\r\n                )}\r\n            </Draggable>\r\n        ))\r\n    })\r\n\r\n    const onDragEnd = (results) => {\r\n        if (!results.destination) return\r\n        if (results.destination.index === results.source.index) return\r\n        const reordered = reorder(results.source.index, results.destination.index)\r\n        setFavorites(reordered)\r\n    }\r\n\r\n    const toggleDisplayType = () => {\r\n        setIsCardMode((prev) => !prev)\r\n    }\r\n\r\n    const toggleDisplayButton = (\r\n        <Button size=\"small\" classes={{ outlined: classes.button }} onClick={toggleDisplayType} variant=\"outlined\">\r\n            {`Display in ${isCardMode ? 'List' : 'Cards'}`}\r\n        </Button>\r\n    )\r\n\r\n    //console.log('*** render favorites')\r\n    return (\r\n        <div className=\"fade-in\">\r\n            <Grid container justifyContent=\"center\" classes={{ root: classes.root }}>\r\n                <Grid item sm={12} xs={12}>\r\n                    <div className=\"page-top-link\">\r\n                        <Link className=\"link\" to={`/?type=${isCardMode ? 'card' : 'list'}`}>\r\n                            All Albums\r\n                        </Link>\r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs={12} className=\"page-title\">\r\n                    <div>\r\n                        <Typography variant=\"h3\" align=\"center\" component=\"div\">\r\n                            Favorite Albums\r\n                        </Typography>\r\n                        <Typography variant=\"h6\" align=\"center\" color=\"textSecondary\" component=\"div\">\r\n                            {isCardMode ? 'Draggable and Resizable Cards' : 'Draggable List Items'}\r\n                        </Typography>\r\n                    </div>\r\n                </Grid>\r\n                {!favorites || !favorites.length ? (\r\n                    <Grid item sm={12} className=\"albums-wrap\">\r\n                        <div className=\"albums\">No favorite albums selected</div>\r\n                    </Grid>\r\n                ) : isCardMode ? (\r\n                    <div className=\"album-cards-wrap\">\r\n                        <ResponsiveGrid albumItems={favorites}>{toggleDisplayButton}</ResponsiveGrid>\r\n                    </div>\r\n                ) : (\r\n                    <Grid container spacing={4} className=\"albums-wrap-favorites\">\r\n                        <div className={classes.buttonWrap}>\r\n                            {toggleDisplayButton}\r\n                            <Button\r\n                                size=\"small\"\r\n                                classes={{ outlined: classes.button }}\r\n                                onClick={handleSaveOrder}\r\n                                variant=\"outlined\">\r\n                                Save List Order\r\n                            </Button>\r\n                        </div>\r\n                        <div className=\"albums-wrap\">\r\n                            <Grid item xs={12} sm={10} md={8} lg={6} className=\"albums-list-favorites\">\r\n                                <DragDropContext onDragEnd={onDragEnd}>\r\n                                    <Droppable droppableId=\"list\">\r\n                                        {(provided) => (\r\n                                            <div ref={provided.innerRef} {...provided.droppableProps}>\r\n                                                <ItemList items={favorites} />\r\n                                                {provided.placeholder}\r\n                                            </div>\r\n                                        )}\r\n                                    </Droppable>\r\n                                </DragDropContext>\r\n                            </Grid>\r\n\r\n                            <Hidden mdDown>\r\n                                {selectedItem && selectedItem.artist ? (\r\n                                    <Grid item lg={4} className=\"album-info\">\r\n                                        <AlbumInfo\r\n                                            image={selectedItem.image}\r\n                                            artistFull={selectedItem.artistFull}\r\n                                            titleFull={selectedItem.titleFull}\r\n                                            price={selectedItem.price}\r\n                                            releaseDate={selectedItem.releaseDate}\r\n                                            link={selectedItem.link}\r\n                                        />\r\n                                    </Grid>\r\n                                ) : (\r\n                                    <div className=\"album-info-content\">\r\n                                        <Typography align=\"center\" gutterBottom variant=\"h6\" component=\"div\">\r\n                                            No item selected\r\n                                        </Typography>\r\n                                    </div>\r\n                                )}\r\n                            </Hidden>\r\n                        </div>\r\n                    </Grid>\r\n                )}\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FavoriteAlbums\r\n","import { connect } from 'react-redux'\r\nimport { allFavoriteAlbums } from '../../store/albums'\r\nimport { favoriteAlbums, replaceFavoriteAlbums } from '../../store/favoriteAlbums'\r\n//import { savedFavoriteCards, saveFavoriteCardsInOrder } from '../../store/savedFavoriteAblumCards'\r\nimport FavoriteAlbums from './FavoriteAlbums'\r\n\r\nconst mapStateToProps = (state, props) => ({\r\n    favoriteAlbums: favoriteAlbums(state),\r\n    allFavoriteAlbums: allFavoriteAlbums(state)\r\n    // savedFavoriteCards: savedFavoriteCards(state)\r\n})\r\n\r\nexport default connect(mapStateToProps, { replaceFavoriteAlbums })(FavoriteAlbums)\r\n","import React from 'react'\nimport { Routes, Route } from 'react-router-dom'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Albums from './components/Albums'\nimport FavoriteAlbums from './components/FavoriteAlbums'\n\nimport './App.css'\n\nconst App = () => {\n    return (\n        <div className=\"fade-in\">\n            <CssBaseline />\n            <Routes>\n                <Route exact path=\"/\" element={<Albums />} />\n                <Route path=\"favorites\" element={<FavoriteAlbums />} />\n            </Routes>\n        </div>\n    )\n}\n\nexport default App\n","import { createSelector } from 'reselect'\r\nimport { FETCH_TODOLIST_SUCCESS, FETCH_TODOLIST_FAILED, UPDATE_TASK, DELETE_TASK } from './actionTypes'\r\nimport { axiosToDoList } from '../axios'\r\n\r\nconst fetchSuccess = (tasks) => ({\r\n    type: FETCH_TODOLIST_SUCCESS,\r\n    tasks\r\n})\r\n\r\nconst fetchFailed = () => ({\r\n    type: FETCH_TODOLIST_FAILED\r\n})\r\n\r\nexport const fetchToDoList = () => async (dispatch) => {\r\n    try {\r\n        const res = await axiosToDoList.get()\r\n        if (res && res.status === 200 && res.data) {\r\n            dispatch(fetchSuccess(res.data))\r\n        } else {\r\n            dispatch(fetchFailed())\r\n        }\r\n    } catch (e) {\r\n        console.log('Error to do list', e)\r\n    }\r\n}\r\n\r\nexport const updateTask = (id, newTitle) => ({\r\n    type: UPDATE_TASK,\r\n    id,\r\n    newTitle\r\n})\r\n\r\nexport const deleteTask = (id) => ({\r\n    type: DELETE_TASK,\r\n    id\r\n})\r\n\r\nconst initState = []\r\nexport const toDoListReducer = (state = initState, action = {}) => {\r\n    switch (action.type) {\r\n        case FETCH_TODOLIST_SUCCESS:\r\n            return action.tasks.map((obj) => ({ ...obj, title: capitalizeFirstChar(obj.title) }))\r\n        //return action.tasks\r\n\r\n        case FETCH_TODOLIST_FAILED:\r\n            return state\r\n\r\n        case UPDATE_TASK:\r\n            return state.map((task) => ({ id: task.id, title: task.id !== action.id ? task.title : action.newTitle }))\r\n\r\n        case DELETE_TASK:\r\n            return state.filter((task) => task.id !== action.id)\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// Selectors\r\nexport const toDoList = createSelector(\r\n    (state) => state.toDoListReducer,\r\n    (tasks) => (tasks && tasks.length ? tasks.sort() : [])\r\n)\r\n\r\n// Helpers\r\nconst capitalizeFirstChar = (str) => {\r\n    const arr = str.split('')\r\n    arr[0] = arr[0].toUpperCase()\r\n    return arr.join('')\r\n}\r\n\r\n// sort array of objects\r\n// favorites.sort(compareObj)\r\n// const compareObj = (a, b) => {\r\n//     return a.title > b.title ? 1 : b.title > a.title ? -1 : 0\r\n// }\r\n","import { combineReducers } from 'redux'\r\nimport { albumsReducer } from './albums'\r\nimport { favoriteAlbumsReducer } from './favoriteAlbums'\r\nimport { savedFavoriteCardsReducer } from './savedFavoriteAblumCards'\r\nimport { toDoListReducer } from './toDoList'\r\n\r\nconst reducers = combineReducers({ albumsReducer, toDoListReducer, favoriteAlbumsReducer, savedFavoriteCardsReducer })\r\n\r\nexport default reducers\r\n","import { createTheme, responsiveFontSizes } from '@material-ui/core/styles'\r\n\r\nconst theme = createTheme({\r\n    palette: {\r\n        primary: {\r\n            main: '#1976d2',\r\n            dark: '#004ba0',\r\n            light: '#63a4ff'\r\n        },\r\n        secondary: {\r\n            main: '#0084b4',\r\n            dark: '#005784',\r\n            light: '#56b4e6'\r\n        },\r\n        text: {\r\n            //secondary: '#00b7eb'\r\n            secondary: '#008fb8'\r\n        }\r\n    },\r\n    overrides: {\r\n        MuiSwitch: {\r\n            root: {\r\n                fontSize: '36px',\r\n                height: '40px'\r\n            }\r\n        },\r\n        MuiFormControlLabel: {\r\n            label: {\r\n                color: '#616161'\r\n            }\r\n        },\r\n        MuiToolbar: {\r\n            root: {\r\n                display: 'flex',\r\n                justifyContent: 'flex-end'\r\n            }\r\n        },\r\n        MuiButton: {\r\n            root: {\r\n                minWidth: '32px'\r\n            }\r\n        },\r\n        MuiTypography: {\r\n            h3: {\r\n                color: '#616161',\r\n                fontFamily: '\"Montserrat\", sans-serif'\r\n            },\r\n            h4: {\r\n                color: '#616161',\r\n                fontFamily: '\"Montserrat\", sans-serif'\r\n            },\r\n            h5: {\r\n                color: '#616161',\r\n                fontFamily: '\"Montserrat\", sans-serif'\r\n            },\r\n            h6: {\r\n                color: '#616161',\r\n                fontFamily: '\"Montserrat\", sans-serif'\r\n            },\r\n            subtitle1: {\r\n                color: '#616161'\r\n            }\r\n        }\r\n    }\r\n})\r\n\r\nconst muiTheme = responsiveFontSizes(theme, { factor: 3 }) // default is 2\r\n\r\nexport default muiTheme\r\n","const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry)\n            getFID(onPerfEntry)\n            getFCP(onPerfEntry)\n            getLCP(onPerfEntry)\n            getTTFB(onPerfEntry)\n        })\n    }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport thunk from 'redux-thunk'\nimport { BrowserRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport { ThemeProvider } from '@material-ui/core/styles'\nimport App from './App'\nimport reducers from './store'\nimport theme from './theme'\nimport reportWebVitals from './reportWebVitals'\n\nimport './index.css'\n\nconst composeEnhancers =\n    process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null || compose\n\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunk)))\nconst app = (\n    <ThemeProvider theme={theme}>\n        <BrowserRouter basename=\"/list-albums/\">\n            <Provider store={store}>\n                <App />\n            </Provider>\n        </BrowserRouter>\n    </ThemeProvider>\n)\n\nReactDOM.render(app, document.getElementById('root'))\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}